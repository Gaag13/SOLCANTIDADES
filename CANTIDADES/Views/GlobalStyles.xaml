<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Estilos de los textos -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>
    <!-- Estilos de botones -->
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#3498db"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5"/>
    </Style>
    <!-- Estilos de CheckBox -->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="checkBoxBorder" Width="18" Height="18" BorderThickness="2" BorderBrush="#3498db" CornerRadius="3">
                            <Path x:Name="checkMark" Width="10" Height="10" Stretch="Uniform" Fill="#3498db" Data="M2.5,7.5 L5.5,10.5 L11.5,4.5" Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter Margin="10,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Estilos de ListViewStyle -->
    <Style x:Key="ListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="#2C2C54"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#4B4B7A"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- Estilos de GridViewColumnHeaderStyl -->
    <Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="#4B4B7A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <!-- Estilos de SearchBoxStyle -->
    <Style x:Key="SearchBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="#2C2C54"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#4B4B7A"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>
    <!-- Estilos de ScrollBarThumbStyle -->
    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle Fill="#3498db" RadiusX="4" RadiusY="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Estilos de ScrollBarStyle -->
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Track x:Name="PART_Track" IsDirectionReversed="True">
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                        </Track.Thumb>
                    </Track>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Estilos de WindowButtonStyle -->
    <Style x:Key="WindowButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="46"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3A3A5C"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Estilo para los ítems del ComboBox -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="SkyBlue">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#3498DB" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BackgroundRectangle" Fill="Red" />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="BackgroundRectangle" Property="Fill" Value="#E6E6E6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Estilo para el contenedor de ítems del ComboBox -->
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource ComboBoxItemStyle}" />
    <!-- Estilo para el contenedor de ítems del ListBox -->
    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="#2C2C54"/>
        <Setter Property="BorderBrush" Value="#4B4B7A"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="Yellow"/>
    </Style>
    <!-- TreeView Style -->
    <Style x:Key="TreeViewStyle" TargetType="TreeView">
        <Setter Property="Background" Value="#2C2C54"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#4B4B7A"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- TreeViewItem Style -->
    <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="2,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="Expander" 
                                      ClickMode="Press" 
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border Width="16" Height="16" Background="Transparent">
                                                    <Path x:Name="ExpandPath" Fill="White" Margin="3,2,3,2"
                                                          Data="M 4 0 L 8 4 L 4 8 Z"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="ExpandPath" Property="Data"
                                                                Value="M 0 4 L 8 4 L 4 8 Z"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Name="PART_Header" 
                                          Grid.Column="1" 
                                          ContentSource="Header"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#3498db"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Background" Value="#4B4B7A"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid Style -->
    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="#2C2C54"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#4B4B7A"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="#2C2C54"/>
        <Setter Property="AlternatingRowBackground" Value="#3A3A5C"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#4B4B7A"/>
        <Setter Property="VerticalGridLinesBrush" Value="#4B4B7A"/>
    </Style>

    <!-- DataGridColumnHeader Style -->
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#4B4B7A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>
                        <Border x:Name="BackgroundBorder" 
                                BorderThickness="0,0,1,1" 
                                BorderBrush="#3A3A5C" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridCell Style -->
    <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Padding="5" 
                            BorderThickness="0" 
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#3498db"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Label Style -->
    <Style x:Key="CustomLabelStyle" TargetType="Label">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Otros estilos... -->

    <Style x:Key="PinkTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="YellowGreen"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Padding" Value="1,3,1,3"/>
        <Setter Property="IsExpanded" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" 
                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                              ClickMode="Press">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Foreground" Value="Pink"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border Width="16" Height="16" Background="Transparent">
                                                    <Path x:Name="ExpandPath" Stroke="Pink" Fill="Transparent" StrokeThickness="1">
                                                        <Path.Data>
                                                            <PathGeometry Figures="M 4 0 L 8 4 L 4 8 Z"/>
                                                        </Path.Data>
                                                    </Path>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="ExpandPath" Property="Data">
                                                            <Setter.Value>
                                                                <PathGeometry Figures="M 0 4 L 8 4 L 4 8 Z"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Border x:Name="Bd" Grid.Column="1" 
                                        Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header" 
                                                      ContentSource="Header" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Background" Value="#2C2C54"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#4B4B7A"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="#3498db"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="#3498db"/>
                            <Setter Property="BorderThickness" Value="0,0,0,2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>
